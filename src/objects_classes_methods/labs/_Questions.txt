Answer the following questions:


1.) What is an instance variable?
An instance variable is a member data of a class.

2.) How do you create an object of a class Vehicle?
Vehicle object_name = new Vehicle();

3.) What is a reference variable? How is it different from a primitive type?
A reference variable is an object being passed from one method to another. This differs from a primitive type in that,
when a primitive type is passed from methodA() to methodB(), methodB() now has a copy of that primitive variable that it can make any changes to without changing that variable in methodA().

4.) What does it mean to pass by reference?
public class Example {

    public static void main(String[] args) {

        Car car1 = new Car("Blue", "Nissan", "XTerra");

        // car2 is not a new object - it is a reference to car1 - any changes you make to car2 WILL affect car1
        Car car2 = car1;

        // set car2 color to Green - this WILL affect car1
        car2.setColor("Green");

        // print the color of car1
        System.out.println(car1.getColor());
        // "Green" will print
    }
}

This shows when car2 is assigned a color, and car2 is passed to car1, car1 now has that same color.

5.) What makes up a method signature?
access-modifier return-type method-name(param a, param b, ...){
}

6.) Write a method signature for a method divide() that takes two ints as parameters and returns a double.
double methodName (int a, int b){
}

7.) When does a method stop executing? How can you make it terminate?
Use return. Once a method returns data, the method stops executing, and the execution returns to the location of the method call. (typo? 3. Return and Return Types).

8.) How do you return a String from a method?
vararg?

9.) What is the return type of a method that does not returns any value?
void.

10.) When should a method be static?
When the method needs to be accessed outside of the class.

11.) What is an example of a time you would make an instance variable static? final?
When you don't want to each object of the class to have its own copy of the variable.

12.) When a method returns a value, what needs to be done with that value?
Needs to be saved in a variable.

13.) What is method overloading?
When a method is designed to be able to take in different primitive types.


14.) What are constructors used for?
A constructor initializes an object when it is created. While syntactically similar to methods, constructors do not have a return type and are used to set initial values to an object when it is created.

15.) If a class does not have a constructor, how does Java handle the creation of an object
???

16.) What does a constructor that takes in two variable, make and model, for a class Vehicle look like?
class MyConstructor {
    char x;
    MyConstructor(){
        x = make;
     }
    MyConstructor(char model){
        x = model;
        }
 }


17.) What is the "this" keyword used for?
Used to refer to the members of a class if local variables have the same name.

18.) What are the keywords public, private, protected used for in a class declaration? A method declaration? Variable declaration?


19.) What is constructor overloading?


20.) Demonstrate constructor overloading with three overloaded constructors.

